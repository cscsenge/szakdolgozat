#pragma checksum "D:\Repos\szakdolgozat\szd1\szd1\GamePage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "D97539AAA6195D79FFF1CCABFE9AC569"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace szd1
{
    partial class GamePage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_UIElement_Visibility(global::Windows.UI.Xaml.UIElement obj, global::Windows.UI.Xaml.Visibility value)
            {
                obj.Visibility = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class GamePage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IGamePage_Bindings
        {
            private global::szd1.GamePage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;
            private global::Windows.UI.Xaml.Controls.Grid obj4;
            private global::Windows.UI.Xaml.Controls.Button obj5;
            private global::Windows.UI.Xaml.Controls.Button obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;
            private global::Windows.UI.Xaml.Controls.ComboBox obj8;
            private global::Windows.UI.Xaml.Controls.Button obj9;
            private global::Windows.UI.Xaml.Controls.TextBlock obj10;
            private global::Windows.UI.Xaml.Controls.ComboBox obj11;
            private global::Windows.UI.Xaml.Controls.Button obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;
            private global::Windows.UI.Xaml.Controls.Button obj14;
            private global::Windows.UI.Xaml.Controls.Button obj15;
            private global::Windows.UI.Xaml.Controls.Button obj16;
            private global::Windows.UI.Xaml.Controls.ItemsControl obj17;

            private GamePage_obj1_BindingsTracking bindingsTracking;

            public GamePage_obj1_Bindings()
            {
                this.bindingsTracking = new GamePage_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // GamePage.xaml line 15
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 4: // GamePage.xaml line 16
                        this.obj4 = (global::Windows.UI.Xaml.Controls.Grid)target;
                        break;
                    case 5: // GamePage.xaml line 26
                        this.obj5 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 6: // GamePage.xaml line 29
                        this.obj6 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 7: // GamePage.xaml line 32
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 8: // GamePage.xaml line 33
                        this.obj8 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 9: // GamePage.xaml line 34
                        this.obj9 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 10: // GamePage.xaml line 35
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 11: // GamePage.xaml line 36
                        this.obj11 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 12: // GamePage.xaml line 37
                        this.obj12 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 13: // GamePage.xaml line 38
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 14: // GamePage.xaml line 39
                        this.obj14 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 15: // GamePage.xaml line 40
                        this.obj15 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 16: // GamePage.xaml line 41
                        this.obj16 = (global::Windows.UI.Xaml.Controls.Button)target;
                        break;
                    case 17: // GamePage.xaml line 18
                        this.obj17 = (global::Windows.UI.Xaml.Controls.ItemsControl)target;
                        break;
                    default:
                        break;
                }
            }

            // IGamePage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::szd1.GamePage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::szd1.GamePage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VM(obj.VM, phase);
                    }
                }
            }
            private void Update_VM(global::szd1.ViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_VM(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_VM_IsInMenu(obj.IsInMenu, phase);
                        this.Update_VM_IsInFillomino(obj.IsInFillomino, phase);
                        this.Update_VM_IsItTheEnd(obj.IsItTheEnd, phase);
                        this.Update_VM_SokobanArray(obj.SokobanArray, phase);
                        this.Update_VM_IsInSokoban(obj.IsInSokoban, phase);
                    }
                }
            }
            private void Update_VM_IsInMenu(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // GamePage.xaml line 15
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj3, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // GamePage.xaml line 26
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj5, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // GamePage.xaml line 29
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj6, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // GamePage.xaml line 32
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj7, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToInverseVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // GamePage.xaml line 33
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj8, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToInverseVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // GamePage.xaml line 34
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj9, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToInverseVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // GamePage.xaml line 35
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj10, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToInverseVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // GamePage.xaml line 36
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj11, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToInverseVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // GamePage.xaml line 37
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj12, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToInverseVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // GamePage.xaml line 41
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj16, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToInverseVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_VM_IsInFillomino(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // GamePage.xaml line 16
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj4, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // GamePage.xaml line 39
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj14, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                    // GamePage.xaml line 40
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj15, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_VM_IsItTheEnd(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // GamePage.xaml line 38
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj13, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }
            private void Update_VM_SokobanArray(global::System.Char[][] obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // GamePage.xaml line 18
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj17, (global::System.Object)this.LookupConverter("MapToGeometry").Convert(obj, typeof(global::System.Object), null, null), null);
                }
            }
            private void Update_VM_IsInSokoban(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // GamePage.xaml line 18
                    XamlBindingSetters.Set_Windows_UI_Xaml_UIElement_Visibility(this.obj17, (global::Windows.UI.Xaml.Visibility)this.LookupConverter("BoolToVisibility").Convert(obj, typeof(global::Windows.UI.Xaml.Visibility), null, null));
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class GamePage_obj1_BindingsTracking
            {
                private global::System.WeakReference<GamePage_obj1_Bindings> weakRefToBindingObj; 

                public GamePage_obj1_BindingsTracking(GamePage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<GamePage_obj1_Bindings>(obj);
                }

                public GamePage_obj1_Bindings TryGetBindingObject()
                {
                    GamePage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_VM(null);
                }

                public void PropertyChanged_VM(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    GamePage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::szd1.ViewModel obj = sender as global::szd1.ViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_VM_IsInMenu(obj.IsInMenu, DATA_CHANGED);
                                bindings.Update_VM_IsInFillomino(obj.IsInFillomino, DATA_CHANGED);
                                bindings.Update_VM_IsItTheEnd(obj.IsItTheEnd, DATA_CHANGED);
                                bindings.Update_VM_SokobanArray(obj.SokobanArray, DATA_CHANGED);
                                bindings.Update_VM_IsInSokoban(obj.IsInSokoban, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "IsInMenu":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VM_IsInMenu(obj.IsInMenu, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsInFillomino":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VM_IsInFillomino(obj.IsInFillomino, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsItTheEnd":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VM_IsItTheEnd(obj.IsItTheEnd, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SokobanArray":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VM_SokobanArray(obj.SokobanArray, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsInSokoban":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_VM_IsInSokoban(obj.IsInSokoban, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::szd1.ViewModel cache_VM = null;
                public void UpdateChildListeners_VM(global::szd1.ViewModel obj)
                {
                    if (obj != cache_VM)
                    {
                        if (cache_VM != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_VM).PropertyChanged -= PropertyChanged_VM;
                            cache_VM = null;
                        }
                        if (obj != null)
                        {
                            cache_VM = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_VM;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // GamePage.xaml line 14
                {
                    this.mainGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 4: // GamePage.xaml line 16
                {
                    this.gameGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 5: // GamePage.xaml line 26
                {
                    this.fillominoButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.fillominoButton).Click += this.FillominoClick;
                }
                break;
            case 6: // GamePage.xaml line 29
                {
                    this.sokobanButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.sokobanButton).Click += this.SokobanClick;
                }
                break;
            case 8: // GamePage.xaml line 33
                {
                    this.levelChooser = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)this.levelChooser).SelectionChanged += this.LevelChooserSelectedChanged;
                    ((global::Windows.UI.Xaml.Controls.ComboBox)this.levelChooser).DropDownClosed += this.LevelChooserDropDownClosed;
                }
                break;
            case 9: // GamePage.xaml line 34
                {
                    this.reloadButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.reloadButton).Click += this.ReloadButtonClick;
                }
                break;
            case 11: // GamePage.xaml line 36
                {
                    this.algorithmChooser = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)this.algorithmChooser).DropDownClosed += this.LevelChooserDropDownClosed;
                }
                break;
            case 12: // GamePage.xaml line 37
                {
                    this.solveButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.solveButton).Click += this.SolveButtonClick;
                }
                break;
            case 14: // GamePage.xaml line 39
                {
                    this.helpButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.helpButton).Click += this.HelpButtonClick;
                }
                break;
            case 15: // GamePage.xaml line 40
                {
                    this.checkButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.checkButton).Click += this.CheckButtonClick;
                }
                break;
            case 16: // GamePage.xaml line 41
                {
                    this.backButton = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)this.backButton).Click += this.BackButtonClick;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // GamePage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    GamePage_obj1_Bindings bindings = new GamePage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    bindings.SetConverterLookupRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

